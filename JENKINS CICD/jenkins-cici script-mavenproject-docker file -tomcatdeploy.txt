node {
     stage(git code pull){
	     git credentialsId:'git-cred', url:'https://github.com/prashantkatare/webapp', branch:'dev-new'
		 }
	 stage(maven build stage){
	 def mvnHome = tool name: 'maven-8', type: 'maven'
	 def mvnCMD = "${mvnHOME}/bin/mvn"
	 sh '${mvnCMD} mvn clean package'
	 }	
	 stage(build docker image){
	  sh 'docker build -t prashantkatare/webapp:2.0.0 .'
	 }
	 stage(push docker image on docker hub){
	  sh 'withCredentials([string(credentialsId: 'docker-pwd', variable: 'dockerHubPwd')]){
	  sh "docker login -u prashantkatare -p ${dockerhubpwd}"
	  }
	  sh 'docker push prashantkatare/webapp:2.0.0 '
	 }
	 stage(run container on tomcat or dev server){
	   def dockerRun = 'docker run -it -d -p 80:8080 --name my-app prashantkatare/webapp'
	   sshagent(['dev-server']){
	 sh "ssh -o StrictHostKeyChecking=no ec2-user@192.168.1.106 ${dockerRun}"
        }
	 
	 }
	 


}
##curl --user username:password -X POST -F "jenkinsfile=<Jenkinsfile" http://jenkins-url:8080/pipeline-model-converter/validate
##Note the following:

##If your Jenkins is authenticating users, you need to pass the username and password otherwise you can omit that part.
##By default, this command expects your Jenkinsfile to be called Jenkinsfile. If not, change the name in the command.
##Replace jenkins_url and possibly port 8080 based on the URL and port where you are running Jenkins. You can also use localhost as URL if you are running Jenkins on your machine.